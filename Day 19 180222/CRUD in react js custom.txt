//https://r9zpdd.csb.app/

in index.js >>

import React from "react";
import ReactDOM from "react-dom";
import ContactCrudApp from "./components/Contactcrud/ContactCrudApp"
const Element = () => {
  return (
    <>
      <ContactCrudApp/>
    </>
  )
}
ReactDOM.render(<Element />, document.getElementById('root'));
-----------------

in ContactCrud.css >>

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.container {
  background-color: rgb(221, 221, 221);
  text-align: center;
  padding-top: 3%;
  height: 35vh;
  width: 50vw;
  margin-left: 25%;
  margin-top: 2%;
  border-radius: 10px;
}
.row {
  padding: 1%;
}

.col {
  padding: 1%;
}

.addContact {
  background-color: navy;
  box-shadow: 5px 5px rgb(0, 0, 56);
  color: white;
  font-size: 15px;
  font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande",
    "Lucida Sans", Arial, sans-serif;
  border-radius: 10px;
  height: 20%;
  width: 20%;
  border: none;
  box-shadow: 10px;
  padding: 1.5%;
}

.addContact:hover{
    background-color: white;
    box-shadow: 5px 5px grey;
    color: black;
    font-weight: bold;
}

.deleteBtn {
  background-color: red;
  box-shadow: 5px 5px rgb(151, 0, 0);
  color: white;
  font-size: 18px;
  font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande",
    "Lucida Sans", Arial, sans-serif;
  border-radius: 10px;
  height: 6%;
  width: 10%;
  border: none;
  box-shadow: 10px;
  padding: 1%;
  margin-bottom: 2%;
}
.deleteBtn:hover{

    background-color: rgb(209, 13, 13);
    box-shadow: 5px 5px rgb(88, 2, 2);
    color: white;
}
.editBtn {
  background-color: rgb(4, 179, 4);
  box-shadow: 5px 5px green;
  color: white;
  font-size: 18px;
  font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande",
    "Lucida Sans", Arial, sans-serif;
  border-radius: 10px;
  height: 6%;
  width: 10%;
  border: none;
  margin-top: 2%;
  margin-left: 2%;
  padding: 1%;margin-bottom: 2%;
}

.editBtn:hover{
    background-color: green;
    box-shadow: 5px 5px rgb(2, 95, 2);
    color: white; 
}
.listGroup {
    
  padding: 2%;
  margin-left: 43%;
  margin-top: 1%;
  font-size: 18px;
  font-family: Georgia, "Times New Roman", Times, serif;
  color: navy;
}
.form-control {
  display: flex;
  text-align: center;
  justify-content: center;
  margin-left: 30%;
  height: 50%;
  width: 40%;
  border-radius: 10px;
  border: none;
  padding: 1%;
}

------------------
in ContactCrud.jsx >>

import React from 'react'
import "./ContactCrud.css";

const ContactCrud = (props) => {
    return (
        <>
            <div className="listGroup">
                {props.contacts.map(item => {
                    return (
                        <>
                            <ol className="data">
                                <li>{item.name}</li>                          
                                <li>{item.email}</li>
                                <button className='deleteBtn' onClick={() => props.handleDelete(item.email)}>Delete</button>
                                <button className='editBtn' onClick={() => props.handleEdit(item.email)}>Edit</button>
                            </ol>
                        </>
                    )
                })}
            </div>
        </>
    )
}

export default ContactCrud
------------------
in ContactCrudApp.jsx >>

import React, { useState } from 'react'
import ContactCrud from "./ContactCrud"
import "./ContactCrud.css";
const ContactCrudApp = () => {

    const [newName, setNewName] = useState("")

    const [newEmail, setNewEmail] = useState("")

    const [contacts, setContacts] = useState([

    ])

    const handleNameChange = (event) => {
        setNewName(event.target.value);
    }

    const handleEmailChange = (event) => {
        setNewEmail(event.target.value)
    }

    const handleContactSubmit = () => {
        setContacts([...contacts, { name: newName, email: newEmail }]);
        setNewName("");
        setNewEmail("");
    }

    const handleDelete = (emailId) => {
        const newContacts = contacts.filter(item => item.email !== emailId);
        setContacts(newContacts);
    }

    const handleEdit = (emailId) => {
        const newContacts = [...contacts];
        const index = newContacts.findIndex(el => el.email === emailId);
        newContacts[index] = { name: newName, email: newEmail };
        setContacts(newContacts);
        setNewName("");
        setNewEmail("");
    }

    return (
        <>
            <div className="container"><span className="heading"><b><u>CRUD OPERATION</u></b></span>
                <form>
                    <div className="row">
                        <div className="col">
                            <input type="text" className="form-control" placeholder="Full Name" aria-label="Full Name" onChange={handleNameChange} value={newName} />
                        </div>
                        <div className="col">
                            <input type="text" className="form-control" placeholder="Email" aria-label="Email" onChange={handleEmailChange} value={newEmail} />
                        </div>
                    </div>
                    <button type="button" className="addContact" onClick={handleContactSubmit}><b>Submit</b></button>
                </form>
            </div>
            <ContactCrud contacts={contacts} handleDelete={handleDelete} handleEdit={handleEdit} />
        </>
    )
}

export default ContactCrudApp