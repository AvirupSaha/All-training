in action folder

Action.js >>

export const addEntry = (entry) => {
  return {
    type: "ADD_ENTRY",
    entry: entry
  };
};

export const deleteEntry = (id) => {
  return {
    type: "DELETE_ENTRY",
    id: id
  };
};


--------------
in components folder 

in AddEntry.jsx >>

import { useState } from "react";
import { useDispatch } from "react-redux";
import { addEntry } from "../actions/Actions";

const AddEntry = () => {
  const [item, setItem] = useState("");
  const [calories, setCalories] = useState(0);
  const dispatch = useDispatch();
  const handleSubmit = (e) => {
    e.preventDefault();
    dispatch(addEntry({ item, calories }));
    setItem("");
    setCalories(0);
  };
  return (
    <div className="border border-info rounded p-4 mt-3">
      <form action="" className="form-group" onSubmit={handleSubmit}>
        <div className="form-group">
          <label htmlFor="description">Food Item</label>
          <input
            type="text"
            id="description"
            className="form-control"
            value={item}
            onChange={(e) => setItem(e.target.value)}
          />
        </div>
        <div className="form-group mt-2">
          <label htmlFor="description">Calories</label>
          <input
            type="text"
            id="Amount"
            className="form-control"
            value={calories}
            onChange={(e) => setCalories(e.target.value)}
          />
        </div>
        <button className="btn btn-primary mt-3">Add Entry</button>
      </form>
    </div>
  );
};
export default AddEntry;

..............
in Entries.jsx >>

import { useSelector } from "react-redux";
import Entry from "./Entry";

const Entries = () => {
  const entries = useSelector((state) => state.calorie);
  console.log(entries);
  return (
    <div className="mt-3">
      <h4 className="display-6">Entries</h4>
      <hr />
      <div className="list-group">
        {entries.map((el) => (
          <Entry entry={el} />
        ))}
      </div>
    </div>
  );
};
export default Entries;

..............
in Entry.jsx >>

import { useDispatch } from "react-redux";
import { deleteEntry } from "../actions/Actions";

const Entry = (props) => {
  const dispatch = useDispatch();
  const handleDelete = () => {
    dispatch(deleteEntry(props.entry.id));
  };
  return (
    <div className="list-group-item list-group-item-action d-flex justify-content-between mt-2">
      <div className="">{props.entry.item}</div>
      <div className="">{props.entry.calories} kcal</div>
      <button className="btn-close" onClick={handleDelete}></button>
    </div>
  );
};
export default Entry;

..............
in TotalCalories.jsx >>

const TotalCalories = () => {
  return <div className="display-5 text-center">Total Calories</div>;
};
export default TotalCalories;

---------------
in reducers folder

in Reducer.js >>

import { combineReducers } from "redux";

const initState = [];
export const calorieReducer = (state = initState, action) => {
  switch (action.type) {
    case "ADD_ENTRY":
      return [
        ...state,
        { ...action.entry, id: Math.floor(Math.random() * 99) }
      ];
    case "DELETE_ENTRY":
      return state.filter((item) => item.id !== action.id);
    default:
      return state;
  }
};
export const rootReducer = combineReducers({
  calorie: calorieReducer
});

---------------
in App.js >>

import AddEntry from "./components/AddEntry";
import Entries from "./components/Entries";
import TotalCalories from "./components/TotalCalories";
import "./styles.css";

export default function App() {
  return (
    <div className="container">
      <TotalCalories />
      <AddEntry />
      <Entries />
    </div>
  );
}

-------------
in index.js >>

import ReactDOM from "react-dom";
import { Provider } from "react-redux";
import { createStore } from "redux";

import App from "./App";
import { rootReducer } from "./reducers/Reducer";

const store = createStore(rootReducer);

const rootElement = document.getElementById("root");
ReactDOM.render(
  <Provider store={store}>
    <App />
  </Provider>,
  rootElement
);

